continue
body.to_json
body
body.delete("metric")
body = self.as_json
exit
Hoopla::Client.hoopla_client::PUBLIC_API_ENDPOINT
Hoopla::Client.hoopla_client.PUBLIC_API_ENDPOINT
Hoopla::Client.hoopla_client::PUBLIC_API_ENDPOINT
self.owner = { kind: 'user', href: user.href }
self.id
continue
self.to_json
self
exit
User.find(self.owner['href'].split('/').last)
CONTINUE
continue
CONTINUE
User.find(self.owner['href'].split('/').last)
self.owner['href'].split('/').last
exit
continue
new(metric).as_json
new metric
metric
continue
params.to_s
"/metrics/#{metric_id}/values/#{id}"
self.put("/metrics/#{metric_id}/values/#{id}", params.to_s, self.headers)
self.headers
continue
self.headers
continue
self.headers
params.to_s
continue
response.status
response.body
response
continue
content_type
body
relative_url
continue
user.href
user
continue
self.persisted?
self
continue
response.body
response
continue
params.to_json
continue
"/metrics/#{metric_id}/values/#{id}"
self.headers
params
continue
params
continue
self.headers
params
continue
JSON.parse(@value.to_json)
@value.to_json
@value.
@value
continue
params
continue
params
"/metrics/#{params[:metric_id]}/values/#{id}"
continue
self.headers
continue
self.id
self
save
save(from: "/metrics/#{params[:metric_id]}/values/#{id}")
continue
params[:value][:value]
params[:value]
params
continue
params
params['metric_id']
params[:metric_id]
params
"/metrics/#{params[:metric_id]}/values/#{id}"
continue
prefix_parameters.class
prefix_parameters[:metric_id]
prefix_parameters.metric_id
prefix_parameters
continue
self.prefix_options
params
prefix
continue
self.prefix_source
self.prefix_options
self.prefix
continue
params[:metric_id]
continue
id
continue
items.last
items
items.user
items
continue
items.last.owner.kindco
items.last.owner.kind
items.last.owner
items
continue
self.headers['Accept'] = 'application/vnd.hoopla.metric-value-list+json'
self.headers
continue
"/metrics/#{data[:params][:metric_id]}/values"
data[:params][:metric_id]
continue
"/metrics/#{params[:metric_id]}/values"
params
params[:metric_id]
/metrics/#{params[:metric_id]}/values
continue
Value.all(params: { metric_id: params[:metric_id]})
continue
Value.all(params: { metric_id: params[:metric_id]})
alue.all(params: { metric_id: params[:metric_id]})
params[:metric_id]
exit
Metric.find(params[:id])
continue
params[:id]
Metric.find(params[:id])
continue
Metric.find(params[:id])
params[:id]
params[:id
exit
continue
self.href
self
exit
Metric.all
metric.all
ActiveResource::Base.headers['Authorization'] = "Bearer #{@hoopla_client.token}"
@hoopla_client.token
continue
@hoopla_client.token
exit
metrics
